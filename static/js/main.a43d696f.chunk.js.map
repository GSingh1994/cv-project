{"version":3,"sources":["assets/person.svg","Components/Header.js","assets/exp.svg","Components/Experience.js","assets/edu.svg","Components/Education.js","assets/skill.svg","Components/Skills.js","assets/mail.svg","assets/github.svg","assets/location.svg","Components/PdfCv.js","Components/CvPage.js","Components/DarkMode.js","App.js","reportWebVitals.js","index.js"],"names":["Header","headerValues","useState","name","website","address","email","summary","values","setValues","handleChange","e","target","value","useEffect","className","src","personLogo","alt","htmlFor","onChange","type","placeholder","Experience","experienceValues","inputFields","setInputFields","index","checked","endJob","expLogo","map","inputField","onClick","splice","removeExp","employer","jobTitle","city","province","startJob","id","Education","educationValues","endSchool","eduLogo","input","removeEdu","school","degree","startSchool","Skills","skillsvalues","skillLogo","removeSkill","skill","uniqid","require","styles","StyleSheet","create","page","backgroundColor","color","cvHeader","padding","title","fontSize","fontWeight","marginTop","marginBottom","info","height","personalInfo","logo","marginRight","cvBody","sectionTitle","borderBottom","paddingBottom","section","flexDirection","justifyContent","lineHeight","display","footer","opacity","position","bottom","margin","PdfCv","headerState","expState","eduState","skillsState","size","style","gitHubIcon","exp","edu","marginLeft","CvPage","usePDF","document","instance","updateInstance","showCv","setShowCv","href","url","download","locationIcon","mailIcon","Toggle","DarkMode","darkMode","useDarkMode","disable","toggle","enable","App","setheaderState","setExpState","setEduState","setSkillsState","window","innerWidth","isMobile","setIsMobile","addEventListener","ismobile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a43d696f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/person.eec43b10.svg\";","import { useState, useEffect } from \"react\";\nimport personLogo from \"../assets/person.svg\";\n\nconst Header = ({ headerValues }) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    website: \"\",\n    address: \"\",\n    email: \"\",\n    summary: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  useEffect(() => {\n    headerValues(values);\n  }, [values]);\n\n  return (\n    <div className=\"Header\">\n      <div className=\"logo\">\n        <img src={personLogo} alt=\"\" />\n        <h1 className=\"heading\">Personal Details</h1>\n      </div>\n      <fieldset>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          name=\"name\"\n          value={values.name}\n          onChange={handleChange}\n          type=\"text\"\n        />\n\n        <label htmlFor=\"website\">Website</label>\n        <input\n          name=\"website\"\n          value={values.website}\n          onChange={handleChange}\n          type=\"text\"\n        />\n\n        <label htmlFor=\"address\">address</label>\n        <input\n          name=\"address\"\n          value={values.address}\n          onChange={handleChange}\n          type=\"text\"\n        />\n\n        <label htmlFor=\"email\">email</label>\n        <input\n          name=\"email\"\n          value={values.email}\n          type=\"email\"\n          onChange={handleChange}\n        />\n        <label htmlFor=\"summary\">summary</label>\n        <textarea\n          name=\"summary\"\n          onChange={handleChange}\n          value={values.summary}\n          placeholder=\"Your professional summary...\"\n        ></textarea>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/exp.24b96528.svg\";","import { useState, useEffect } from \"react\";\nimport expLogo from \"../assets/exp.svg\";\n\nconst Experience = ({ experienceValues }) => {\n  const [inputFields, setInputFields] = useState([]);\n\n  const handleChange = (e, index) => {\n    const { name, value } = e.target;\n    const values = [...inputFields];\n    values[index][name] = value;\n    setInputFields(values);\n    if (e.target.checked) {\n      values[index].endJob = \"current\";\n    }\n  };\n\n  useEffect(() => {\n    experienceValues(inputFields);\n  }, [inputFields]);\n\n  const addMoreExp = () => {\n    setInputFields([\n      ...inputFields,\n      {\n        employer: \"\",\n        jobTitle: \"\",\n        startJob: \"\",\n        endJob: \"\",\n        city: \"\",\n        province: \"\",\n      },\n    ]);\n  };\n\n  const removeExp = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  return (\n    <div className=\"Experience\">\n      <div className=\"logo\">\n        <img src={expLogo} alt=\"\" />\n        <h1 className=\"heading\">Work Experience</h1>\n      </div>\n      {inputFields.map((inputField, index) => (\n        <fieldset className=\"exp-field\" key={index}>\n          <button\n            className=\"delete-btn button-clear\"\n            onClick={() => removeExp(index)}\n          >\n            DELETE\n          </button>\n\n          <label htmlFor=\"employer\">Employer</label>\n          <input\n            name=\"employer\"\n            value={inputField.employer}\n            onChange={(e) => handleChange(e, index)}\n            type=\"text\"\n          />\n\n          <label htmlFor=\"jobTitle\">Job title</label>\n          <input\n            name=\"jobTitle\"\n            value={inputField.jobTitle}\n            onChange={(e) => handleChange(e, index)}\n            type=\"text\"\n          />\n          <div className=\"form-location\">\n            <div>\n              <label htmlFor=\"city\">City</label>\n              <input\n                name=\"city\"\n                value={inputField.city}\n                onChange={(e) => handleChange(e, index)}\n                type=\"text\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"province\">Province</label>\n              <input\n                name=\"province\"\n                value={inputField.province}\n                onChange={(e) => handleChange(e, index)}\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"form-time\">\n            <div>\n              <label htmlFor=\"startJob\">Start date</label>\n              <input\n                onChange={(e) => handleChange(e, index)}\n                type=\"month\"\n                name=\"startJob\"\n                value={inputField.startJob}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"endJob\">End date</label>\n              <input\n                onChange={(e) => handleChange(e, index)}\n                type=\"month\"\n                name=\"endJob\"\n                value={inputField.endJob}\n              />\n            </div>\n          </div>\n          <div className=\"float-right\">\n            <input\n              onChange={(e) => handleChange(e, index)}\n              type=\"checkbox\"\n              id=\"workHere\"\n            />\n            <label className=\"label-inline\" htmlFor=\"workHere\">\n              Currently work here\n            </label>\n          </div>\n        </fieldset>\n      ))}\n      <button className=\"button-clear add-btn\" onClick={addMoreExp}>\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default Experience;\n","export default __webpack_public_path__ + \"static/media/edu.aa34c026.svg\";","import { useState, useEffect } from \"react\";\nimport eduLogo from \"../assets/edu.svg\";\n\nconst Education = ({ educationValues }) => {\n  const [inputFields, setInputFields] = useState([]);\n\n  const handleChange = (e, index) => {\n    const { name, value } = e.target;\n    const values = [...inputFields];\n    values[index][name] = value;\n    if (e.target.checked) {\n      values[index].endSchool = \"current\";\n    }\n    setInputFields(values);\n  };\n\n  useEffect(() => {\n    educationValues(inputFields);\n  }, [inputFields]);\n\n  const addMoreEdu = () => {\n    setInputFields([\n      ...inputFields,\n      {\n        school: \"\",\n        degree: \"\",\n        startSchool: \"\",\n        endSchool: \"\",\n        city: \"\",\n        province: \"\",\n      },\n    ]);\n  };\n\n  const removeEdu = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  return (\n    <div className=\"Education\">\n      <div className=\"logo\">\n        <img src={eduLogo} alt=\"\" /> <h1 className=\"heading\">Education</h1>\n      </div>\n      {inputFields.map((input, index) => (\n        <fieldset className=\"edu-field\" key={index}>\n          <button\n            className=\"button-clear delete-btn\"\n            onClick={() => removeEdu(index)}\n          >\n            DELETE\n          </button>\n          <label htmlFor=\"school\">School:</label>\n          <input\n            value={input.school}\n            name=\"school\"\n            onChange={(e) => handleChange(e, index)}\n            type=\"text\"\n          />\n          <label htmlFor=\"degree\">degree</label>\n          <input\n            value={input.degree}\n            name=\"degree\"\n            onChange={(e) => handleChange(e, index)}\n            type=\"text\"\n          />\n          <div className=\"form-location\">\n            <div>\n              <label htmlFor=\"city\">City</label>\n              <input\n                name=\"city\"\n                value={input.city}\n                onChange={(e) => handleChange(e, index)}\n                type=\"text\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"province\">Province</label>\n              <input\n                name=\"province\"\n                value={input.province}\n                onChange={(e) => handleChange(e, index)}\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"form-time\">\n            <div>\n              <label htmlFor=\"startSchool\">From:</label>\n              <input\n                onChange={(e) => handleChange(e, index)}\n                type=\"month\"\n                value={input.startSchool}\n                name=\"startSchool\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"endSchool\">To:</label>\n              <input\n                onChange={(e) => handleChange(e, index)}\n                type=\"month\"\n                value={input.endSchool}\n                name=\"endSchool\"\n              />\n            </div>\n          </div>\n          <div className=\"float-right\">\n            <input\n              onChange={(e) => handleChange(e, index)}\n              type=\"checkbox\"\n              id=\"studyHere\"\n            />\n            <label className=\"label-inline\" htmlFor=\"studyHere\">\n              Currently study here\n            </label>\n          </div>\n        </fieldset>\n      ))}\n      <button className=\"button-clear add-btn\" onClick={addMoreEdu}>\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default Education;\n","export default __webpack_public_path__ + \"static/media/skill.d77ff514.svg\";","import { useState, useEffect } from \"react\";\nimport skillLogo from \"../assets/skill.svg\";\nexport default function Skills({ skillsvalues }) {\n  const [inputFields, setInputFields] = useState([]);\n\n  const handleChange = (e, index) => {\n    const { name, value } = e.target;\n    const values = [...inputFields];\n    values[index][name] = value;\n    setInputFields(values);\n  };\n\n  useEffect(() => {\n    skillsvalues(inputFields);\n  }, [inputFields]);\n\n  const addMoreSkills = () => {\n    setInputFields([\n      ...inputFields,\n      {\n        skill: \"\",\n      },\n    ]);\n  };\n\n  const removeSkill = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  return (\n    <div className=\"Skills\">\n      <div className=\"logo\">\n        <img src={skillLogo} alt=\"\" /> <h1 className=\"heading\">Skills</h1>\n      </div>\n\n      {inputFields.map((input, index) => (\n        <fieldset className=\"skill-field\" key={index}>\n          <button\n            className=\"button-clear delete-btn\"\n            onClick={() => removeSkill(index)}\n          >\n            DELETE\n          </button>\n          <label htmlFor=\"skill\">skill:</label>\n          <input\n            value={input.skill}\n            name=\"skill\"\n            onChange={(e) => handleChange(e, index)}\n            type=\"text\"\n          />\n        </fieldset>\n      ))}\n      <button className=\"button-clear add-btn\" onClick={addMoreSkills}>\n        Add\n      </button>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/mail.f7baf2d2.svg\";","export default __webpack_public_path__ + \"static/media/github.16a9304e.svg\";","export default __webpack_public_path__ + \"static/media/location.7850949a.svg\";","import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Image,\n  Document,\n  StyleSheet,\n} from \"@react-pdf/renderer\";\nimport mailIcon from \"../assets/mail.svg\";\nimport gitHubIcon from \"../assets/github.svg\";\nimport locationIcon from \"../assets/location.svg\";\nconst uniqid = require(\"uniqid\");\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: \"#ffffff\",\n    color: \"black\",\n  },\n  cvHeader: {\n    backgroundColor: \"#373d48\",\n    color: \"#ffffff\",\n    padding: \"17.25 37.5\",\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: \"bold\",\n    marginTop: 8,\n    marginBottom: 15,\n  },\n  info: { height: 70 },\n  personalInfo: {\n    fontSize: 12,\n    marginBottom: 6,\n  },\n  logo: {\n    marginRight: 8,\n  },\n\n  cvBody: {\n    padding: \"0 37.5 30 37.5\",\n  },\n  sectionTitle: {\n    borderBottom: \"1px solid #373d48\",\n    paddingBottom: 3.75,\n    fontSize: 18,\n    marginTop: 30,\n    marginBottom: 12.06,\n  },\n  section: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    fontSize: 12,\n    lineHeight: 1.5,\n  },\n  skill: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  footer: {\n    fontSize: 10,\n    opacity: 0.7,\n    position: \"absolute\",\n    bottom: 1,\n    flexDirection: \"row\",\n    margin: \"18 36\",\n  },\n});\n\nconst PdfCv = ({ headerState, expState, eduState, skillsState }) => {\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.cvHeader}>\n          <Text style={styles.title}>{headerState.name}</Text>\n          <View style={styles.info}>\n            <View style={styles.personalInfo}>\n              <Image style={styles.logo} src=\"../assets/test.png\" />\n              <Text>{headerState.website}</Text>\n            </View>\n            <View style={styles.personalInfo}>\n              <Image style={styles.logo} src={gitHubIcon} />\n              <Text> {headerState.address}</Text>\n            </View>\n            <View style={styles.personalInfo}>\n              <Image style={styles.logo} src={gitHubIcon} />\n              <Text> {headerState.email}</Text>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.cvBody}>\n          <Text style={styles.sectionTitle}>Professinal Summary</Text>\n          <Text style={{ fontSize: 12, lineHeight: 1.5 }}>\n            {headerState.summary}\n          </Text>\n\n          <Text style={styles.sectionTitle}>Work History</Text>\n          {expState.map((exp) => (\n            <View key={uniqid()} style={styles.section}>\n              <View>\n                <Text>{exp.startJob} -</Text>\n                <Text>{exp.endJob}</Text>\n              </View>\n\n              <View>\n                <Text style={{ fontWeight: \"bold\" }}>{exp.employer}</Text>\n                <Text>{exp.jobTitle}</Text>\n              </View>\n\n              <View style={{ marginBottom: 10 }}>\n                <Text>{exp.city},</Text>\n                <Text>{exp.province}</Text>\n              </View>\n            </View>\n          ))}\n\n          <Text style={styles.sectionTitle}>Education</Text>\n          {eduState.map((edu) => (\n            <View key={uniqid()} style={styles.section}>\n              <View>\n                <Text>{edu.startSchool} -</Text>\n                <Text>{edu.endSchool}</Text>\n              </View>\n\n              <View>\n                <Text style={{ fontWeight: \"bold\" }}>{edu.school}</Text>\n                <Text>{edu.degree}</Text>\n              </View>\n              <View style={{ marginBottom: 10 }}>\n                <Text>{edu.city},</Text>\n                <Text>{edu.province}</Text>\n              </View>\n            </View>\n          ))}\n\n          <Text style={styles.sectionTitle}>Skills</Text>\n          <View style={styles.section}>\n            {skillsState.map((skill) => (\n              <View style={{ marginBottom: 10 }} key={uniqid()}>\n                <Text style={styles.skill}>{skill.skill}</Text>\n              </View>\n            ))}\n          </View>\n        </View>\n\n        <View style={styles.footer}>\n          <Text>{headerState.name}</Text>\n          <Text style={{ marginLeft: 130 }}>{headerState.email}</Text>\n          <Text style={{ marginLeft: 130 }}>1/1</Text>\n        </View>\n      </Page>\n    </Document>\n  );\n};\nexport default PdfCv;\n","import { usePDF } from \"@react-pdf/renderer\";\nimport PdfCv from \"./PdfCv\";\nimport { useEffect, useState } from \"react\";\nimport mailIcon from \"../assets/mail.svg\";\nimport gitHubIcon from \"../assets/github.svg\";\nimport locationIcon from \"../assets/location.svg\";\nconst uniqid = require(\"uniqid\");\n\nconst CvPage = ({ headerState, expState, eduState, skillsState }) => {\n  const [instance, updateInstance] = usePDF({\n    document: (\n      <PdfCv\n        headerState={headerState}\n        expState={expState}\n        eduState={eduState}\n        skillsState={skillsState}\n      />\n    ),\n  });\n  useEffect(() => {\n    updateInstance();\n  }, [headerState]);\n\n  const [showCv, setShowCv] = useState(false);\n\n  return (\n    <div className=\"CvPage\">\n      <div className=\"mobile-nav\">\n        <button onClick={() => setShowCv(!showCv)} className=\"preview-btn\">\n          Preview\n        </button>\n        <a\n          className=\"download-btn\"\n          href={instance.url}\n          download={headerState.name}\n        >\n          <button>Download</button>\n        </a>\n      </div>\n\n      <div className={showCv ? \"mobileCv\" : \"hideCv\"}>\n        <button onClick={() => setShowCv(!showCv)} className=\"close-btn\">\n          X\n        </button>\n        <div className=\"cv-header\">\n          <h1>{headerState.name}</h1>\n\n          <div className=\"personal-info\">\n            <img src={gitHubIcon} alt=\"gitHub icon\" /> {headerState.website}\n          </div>\n\n          <div className=\"personal-info\">\n            <img src={locationIcon} alt=\"location icon\" />\n            {headerState.address}\n          </div>\n\n          <div className=\"personal-info\">\n            <img src={mailIcon} alt=\"mail icon\" />\n            {headerState.email}\n          </div>\n        </div>\n\n        <div className=\"cv-body\">\n          <h1>Professinal Summary</h1>\n          <div className=\"summary\">{headerState.summary}</div>\n          <h1>Work History</h1>\n          {expState.map((exp) => (\n            <div key={uniqid()} className=\"cv-experience\">\n              <div>\n                <div>{exp.startJob} -</div>\n                <div>{exp.endJob}</div>\n              </div>\n\n              <div>\n                <div className=\"bold\">{exp.employer}</div>\n                <div>{exp.jobTitle}</div>\n              </div>\n\n              <div className=\"cv-location\">\n                <div>{exp.city},</div>\n                <div>{exp.province}</div>\n              </div>\n            </div>\n          ))}\n          <h1>Education</h1>\n          {eduState.map((edu) => (\n            <div key={uniqid()} className=\"cv-education\">\n              <div>\n                <div>{edu.startSchool} -</div>\n                <div>{edu.endSchool}</div>\n              </div>\n\n              <div>\n                <div className=\"bold\">{edu.school}</div>\n                <div>{edu.degree}</div>\n              </div>\n              <div className=\"cv-location\">\n                <div>{edu.city},</div>\n                <div>{edu.province}</div>\n              </div>\n            </div>\n          ))}\n          <h1>Skills</h1>\n          <div className=\"cv-skills\">\n            {skillsState.map((skill) => (\n              <ul key={uniqid()}>\n                <li>{skill.skill}</li>\n              </ul>\n            ))}\n          </div>\n        </div>\n        <div className=\"cv-footer\">\n          <div>{headerState.name}</div>\n          <div className=\"footer-email\">{headerState.email}</div>\n          <div className=\"footer-page\">1/1</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CvPage;\n","import useDarkMode from \"use-dark-mode\";\n\nconst Toggle = ({ checked, onChange }) => (\n  <span className=\"toggle-control\">\n    <input\n      className=\"dmcheck\"\n      type=\"checkbox\"\n      checked={checked}\n      onChange={onChange}\n      id=\"dmcheck\"\n    />\n    <label htmlFor=\"dmcheck\" />\n  </span>\n);\n\nconst DarkMode = () => {\n  const darkMode = useDarkMode(false);\n\n  return (\n    <div className=\"dark-mode-toggle\">\n      <button type=\"button\" onClick={darkMode.disable}>\n        ☀\n      </button>\n      <Toggle checked={darkMode.value} onChange={darkMode.toggle} />\n      <button type=\"button\" onClick={darkMode.enable}>\n        ☾\n      </button>\n    </div>\n  );\n};\n\nexport default DarkMode;\n","import \"./App.scss\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"./Components/Header\";\nimport Experience from \"./Components/Experience\";\nimport Education from \"./Components/Education\";\nimport Skills from \"./Components/Skills\";\nimport CvPage from \"./Components/CvPage\";\nimport DarkMode from \"./Components/DarkMode\";\n\nconst App = () => {\n  const [headerState, setheaderState] = useState([]);\n  const headerValues = (values) => setheaderState({ ...values });\n\n  const [expState, setExpState] = useState([]);\n  const experienceValues = (values) => setExpState(values);\n\n  const [eduState, setEduState] = useState([]);\n  const educationValues = (values) => setEduState(values);\n\n  const [skillsState, setSkillsState] = useState([]);\n  const skillsvalues = (values) => setSkillsState(values);\n\n  //Check screen resize\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 1200);\n  useEffect(() => {\n    window.addEventListener(\n      \"resize\",\n      () => {\n        const ismobile = window.innerWidth < 1200;\n        if (ismobile !== isMobile) setIsMobile(ismobile);\n      },\n      false\n    );\n  }, [isMobile]);\n\n  return (\n    <div>\n      <div className=\"nav\">\n        Easy CV\n        <DarkMode />\n      </div>\n      {/* To make responsive on mobile */}\n      <div className={isMobile ? \"container App\" : \"App\"}>\n        <div className=\"form\">\n          <Header headerValues={headerValues} />\n          <Experience experienceValues={experienceValues} />\n          <Education educationValues={educationValues} />\n          <Skills skillsvalues={skillsvalues} />\n        </div>\n\n        <div className=\"cv\">\n          <CvPage\n            headerState={headerState}\n            expState={expState}\n            eduState={eduState}\n            skillsState={skillsState}\n            isMobile={isMobile}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"../node_modules/milligram/dist/milligram.min.css\";\nimport \"../node_modules/normalize.css/normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}