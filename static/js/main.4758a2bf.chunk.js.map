{"version":3,"sources":["assets/person.svg","Components/Header.js","assets/exp.svg","Components/Experience.js","assets/edu.svg","Components/Education.js","assets/mail.svg","assets/github.svg","assets/location.svg","Components/CvPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","headerValues","useState","name","website","address","email","summary","values","setValues","handleChange","e","target","value","useEffect","className","src","personLogo","alt","htmlFor","onChange","type","Experience","experienceValues","inputFields","setInputFields","index","checked","endJob","expLogo","map","inputField","onClick","splice","removeExp","employer","jobTitle","city","province","startJob","id","Education","educationValues","endSchool","eduLogo","input","removeEdu","school","degree","startSchool","uniqid","require","CvPage","headerState","expState","eduState","gitHubIcon","locationIcon","mailIcon","exp","edu","App","setheaderState","setExpState","setEduState","window","innerWidth","isMobile","setIsMobile","addEventListener","ismobile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4758a2bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/person.eec43b10.svg\";","import { useState, useEffect } from \"react\";\nimport personLogo from \"../assets/person.svg\";\n\nconst Header = ({ headerValues }) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    website: \"\",\n    address: \"\",\n    email: \"\",\n    summary: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  useEffect(() => {\n    headerValues(values);\n  }, [values]);\n\n  return (\n    <div className=\"Header\">\n      <div className=\"logo\">\n        <img src={personLogo} alt=\"\" />\n        <h1 className=\"heading\">Personal Details</h1>\n      </div>\n      <fieldset>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          name=\"name\"\n          value={values.name}\n          onChange={handleChange}\n          type=\"text\"\n        />\n\n        <label htmlFor=\"website\">Website</label>\n        <input\n          name=\"website\"\n          value={values.website}\n          onChange={handleChange}\n          type=\"text\"\n        />\n\n        <label htmlFor=\"address\">address</label>\n        <input\n          name=\"address\"\n          value={values.address}\n          onChange={handleChange}\n          type=\"text\"\n        />\n\n        <label htmlFor=\"email\">email</label>\n        <input\n          name=\"email\"\n          value={values.email}\n          type=\"email\"\n          onChange={handleChange}\n        />\n        <label htmlFor=\"summary\">summary</label>\n        <textarea\n          name=\"summary\"\n          onChange={handleChange}\n          value={values.summary}\n        ></textarea>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/exp.24b96528.svg\";","import { useState, useEffect } from \"react\";\nimport expLogo from \"../assets/exp.svg\";\n\nconst Experience = ({ experienceValues }) => {\n  const [inputFields, setInputFields] = useState([]);\n\n  const handleChange = (e, index) => {\n    const { name, value } = e.target;\n    const values = [...inputFields];\n    values[index][name] = value;\n    setInputFields(values);\n    if (e.target.checked) {\n      values[index].endJob = \"current\";\n    }\n  };\n\n  useEffect(() => {\n    experienceValues(inputFields);\n  }, [inputFields]);\n\n  const addMoreExp = () => {\n    setInputFields([\n      ...inputFields,\n      {\n        employer: \"\",\n        jobTitle: \"\",\n        startJob: \"\",\n        endJob: \"\",\n        city: \"\",\n        province: \"\",\n      },\n    ]);\n  };\n\n  const removeExp = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  return (\n    <div className=\"Experience\">\n      <div className=\"logo\">\n        <img src={expLogo} alt=\"\" />\n        <h1 className=\"heading\">Work Experience</h1>\n      </div>\n      {inputFields.map((inputField, index) => (\n        <fieldset className=\"exp-field\" key={index}>\n          <button\n            className=\"delete-btn button-clear\"\n            onClick={() => removeExp(index)}\n          >\n            DELETE\n          </button>\n\n          <label htmlFor=\"employer\">Employer</label>\n          <input\n            name=\"employer\"\n            value={inputField.employer}\n            onChange={(e) => handleChange(e, index)}\n            type=\"text\"\n          />\n\n          <label htmlFor=\"jobTitle\">Job title</label>\n          <input\n            name=\"jobTitle\"\n            value={inputField.jobTitle}\n            onChange={(e) => handleChange(e, index)}\n            type=\"text\"\n          />\n          <div className=\"form-location\">\n            <div>\n              <label htmlFor=\"city\">City</label>\n              <input\n                name=\"city\"\n                value={inputField.city}\n                onChange={(e) => handleChange(e, index)}\n                type=\"text\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"province\">Province</label>\n              <input\n                name=\"province\"\n                value={inputField.province}\n                onChange={(e) => handleChange(e, index)}\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"form-time\">\n            <div>\n              <label htmlFor=\"startJob\">Start date</label>\n              <input\n                onChange={(e) => handleChange(e, index)}\n                type=\"month\"\n                name=\"startJob\"\n                value={inputField.startJob}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"endJob\">End date</label>\n              <input\n                onChange={(e) => handleChange(e, index)}\n                type=\"month\"\n                name=\"endJob\"\n                value={inputField.endJob}\n              />\n            </div>\n          </div>\n          <div className=\"float-right\">\n            <input\n              onChange={(e) => handleChange(e, index)}\n              type=\"checkbox\"\n              id=\"workHere\"\n            />\n            <label className=\"label-inline\" htmlFor=\"workHere\">\n              Currently work here\n            </label>\n          </div>\n        </fieldset>\n      ))}\n      <button className=\"button-clear add-btn\" onClick={addMoreExp}>\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default Experience;\n","export default __webpack_public_path__ + \"static/media/edu.aa34c026.svg\";","import { useState, useEffect } from \"react\";\nimport eduLogo from \"../assets/edu.svg\";\n\nconst Education = ({ educationValues }) => {\n  const [inputFields, setInputFields] = useState([]);\n\n  const handleChange = (e, index) => {\n    const { name, value } = e.target;\n    const values = [...inputFields];\n    values[index][name] = value;\n    if (e.target.checked) {\n      values[index].endSchool = \"current\";\n    }\n    setInputFields(values);\n  };\n\n  useEffect(() => {\n    educationValues(inputFields);\n  }, [inputFields]);\n\n  const addMoreEdu = () => {\n    setInputFields([\n      ...inputFields,\n      {\n        school: \"\",\n        degree: \"\",\n        startSchool: \"\",\n        endSchool: \"\",\n        city: \"\",\n        province: \"\",\n      },\n    ]);\n  };\n\n  const removeEdu = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  return (\n    <div className=\"Education\">\n      <div className=\"logo\">\n        <img src={eduLogo} alt=\"\" /> <h1 className=\"heading\">Education</h1>\n      </div>\n      {inputFields.map((input, index) => (\n        <fieldset className=\"edu-field\" key={index}>\n          <button\n            className=\"button-clear delete-btn\"\n            onClick={() => removeEdu(index)}\n          >\n            DELETE\n          </button>\n          <label htmlFor=\"school\">School:</label>\n          <input\n            value={input.school}\n            name=\"school\"\n            onChange={(e) => handleChange(e, index)}\n            type=\"text\"\n          />\n          <label htmlFor=\"degree\">degree</label>\n          <input\n            value={input.degree}\n            name=\"degree\"\n            onChange={(e) => handleChange(e, index)}\n            type=\"text\"\n          />\n          <div className=\"form-location\">\n            <div>\n              <label htmlFor=\"city\">City</label>\n              <input\n                name=\"city\"\n                value={input.city}\n                onChange={(e) => handleChange(e, index)}\n                type=\"text\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"province\">Province</label>\n              <input\n                name=\"province\"\n                value={input.province}\n                onChange={(e) => handleChange(e, index)}\n                type=\"text\"\n              />\n            </div>\n          </div>\n          <div className=\"form-time\">\n            <div>\n              <label htmlFor=\"startSchool\">From:</label>\n              <input\n                onChange={(e) => handleChange(e, index)}\n                type=\"month\"\n                value={input.startSchool}\n                name=\"startSchool\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"endSchool\">To:</label>\n              <input\n                onChange={(e) => handleChange(e, index)}\n                type=\"month\"\n                value={input.endSchool}\n                name=\"endSchool\"\n              />\n            </div>\n          </div>\n          <div className=\"float-right\">\n            <input\n              onChange={(e) => handleChange(e, index)}\n              type=\"checkbox\"\n              id=\"studyHere\"\n            />\n            <label className=\"label-inline\" htmlFor=\"studyHere\">\n              Currently study here\n            </label>\n          </div>\n        </fieldset>\n      ))}\n      <button className=\"button-clear add-btn\" onClick={addMoreEdu}>\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default Education;\n","export default __webpack_public_path__ + \"static/media/mail.f7baf2d2.svg\";","export default __webpack_public_path__ + \"static/media/github.16a9304e.svg\";","export default __webpack_public_path__ + \"static/media/location.7850949a.svg\";","import mailIcon from \"../assets/mail.svg\";\nimport gitHubIcon from \"../assets/github.svg\";\nimport locationIcon from \"../assets/location.svg\";\nconst uniqid = require(\"uniqid\");\n\nconst CvPage = ({ headerState, expState, eduState }) => {\n  return (\n    <div className=\"CvPage\">\n      <div className=\"cv-header\">\n        <h1>{headerState.name}</h1>\n\n        <div className=\"personal-info\">\n          <img src={gitHubIcon} alt=\"gitHub icon\" /> {headerState.website}\n        </div>\n\n        <div className=\"personal-info\">\n          <img src={locationIcon} alt=\"location icon\" />\n          {headerState.address}\n        </div>\n\n        <div className=\"personal-info\">\n          <img src={mailIcon} alt=\"mail icon\" />\n          {headerState.email}\n        </div>\n      </div>\n\n      <div className=\"cv-body\">\n        <div className=\"summary\">{headerState.summary}</div>\n        <h1>Work History</h1>\n        {expState.map((exp) => (\n          <div key={uniqid()} className=\"cv-experience\">\n            <div>\n              <div>{exp.startJob} -</div>\n              <div>{exp.endJob}</div>\n            </div>\n\n            <div>\n              <div className=\"bold\">{exp.employer}</div>\n              <div>{exp.jobTitle}</div>\n            </div>\n\n            <div className=\"cv-location\">\n              <div>{exp.city},</div>\n              <div>{exp.province}</div>\n            </div>\n          </div>\n        ))}\n        <h1>Education</h1>\n        {eduState.map((edu) => (\n          <div key={uniqid()} className=\"cv-education\">\n            <div>\n              <div>{edu.startSchool}</div>\n              <div>{edu.endSchool}</div>\n            </div>\n\n            <div>\n              <div className=\"bold\">{edu.school}</div>\n              <div>{edu.degree}</div>\n            </div>\n            <div className=\"cv-location\">\n              <div>{edu.city},</div>\n              <div>{edu.province}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CvPage;\n{\n  /* <div>Job duties:{exp.jobDuties}</div> */\n}\n","import \"./App.scss\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"./Components/Header\";\nimport Experience from \"./Components/Experience\";\nimport Education from \"./Components/Education\";\nimport CvPage from \"./Components/CvPage\";\n\nconst App = () => {\n  const [headerState, setheaderState] = useState([]);\n  const headerValues = (values) => {\n    setheaderState({ ...values });\n  };\n\n  const [expState, setExpState] = useState([]);\n  const experienceValues = (values) => {\n    setExpState(values);\n  };\n\n  const [eduState, setEduState] = useState([]);\n  const educationValues = (values) => {\n    setEduState(values);\n  };\n\n  //Check screen resize\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 1200);\n  useEffect(() => {\n    window.addEventListener(\n      \"resize\",\n      () => {\n        const ismobile = window.innerWidth < 1200;\n        if (ismobile !== isMobile) setIsMobile(ismobile);\n      },\n      false\n    );\n  }, [isMobile]);\n\n  return (\n    <div>\n      <div className=\"nav\">Easy CV</div>\n      <div className={isMobile ? \"container App\" : \"App\"}>\n        <div className=\"form\">\n          <Header headerValues={headerValues} />\n          <Experience experienceValues={experienceValues} />\n          <Education educationValues={educationValues} />\n        </div>\n        <div className=\"cv\">\n          <CvPage\n            headerState={headerState}\n            expState={expState}\n            eduState={eduState}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"../node_modules/milligram/dist/milligram.min.css\";\nimport \"../node_modules/normalize.css/normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}