{"version":3,"sources":["Components/Header.js","Components/Experience.js","Components/Education.js","Components/CvPage.js","Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Header","headerValues","useState","name","website","address","email","values","setValues","handleChange","e","target","value","useEffect","className","htmlFor","onChange","type","placeholder","Experience","experienceValues","employer","jobTitle","startJob","endJob","inputFields","setInputFields","index","map","inputField","jobDuties","id","onClick","splice","removeExp","Education","educationValues","school","degree","startSchool","endSchool","input","removeEdu","uniqid","require","CvPage","headerState","expState","eduState","exp","edu","Form","setheaderState","setExpState","setEduState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f2c52c1.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Header = ({ headerValues }) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    website: \"\",\n    address: \"\",\n    email: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  useEffect(() => {\n    headerValues(values);\n  }, [values]);\n\n  return (\n    <div className=\"Header\">\n      <div className=\"nes-field is-inline\">\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          name=\"name\"\n          value={values.name}\n          onChange={handleChange}\n          type=\"text\"\n          // id=\"inline_field\"\n          className=\"nes-input is-success\"\n          placeholder=\"NES.css\"\n        />\n      </div>\n\n      <div className=\"nes-field is-inline\">\n        <label htmlFor=\"website\">Website:</label>\n        <input\n          name=\"website\"\n          value={values.website}\n          onChange={handleChange}\n          type=\"text\"\n          // id=\"inline_field\"\n          className=\"nes-input is-success\"\n          placeholder=\"NES.css\"\n        />\n      </div>\n\n      <div className=\"nes-field is-inline\">\n        <label htmlFor=\"address\">address:</label>\n        <input\n          name=\"address\"\n          value={values.address}\n          onChange={handleChange}\n          type=\"text\"\n          // id=\"inline_field\"\n          className=\"nes-input is-success\"\n          placeholder=\"NES.css\"\n        />\n      </div>\n\n      <div className=\"nes-field is-inline\">\n        <label htmlFor=\"email\">email:</label>\n        <input\n          name=\"email\"\n          value={values.email}\n          type=\"email\"\n          onChange={handleChange}\n          // id=\"inline_field\"\n          className=\"nes-input is-success\"\n          placeholder=\"NES.css\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useState, useEffect } from \"react\";\n\nconst Experience = ({ experienceValues }) => {\n  const [inputFields, setInputFields] = useState([\n    {\n      employer: \"\",\n      jobTitle: \"\",\n      startJob: \"\",\n      endJob: \"\",\n    },\n  ]);\n\n  const handleChange = (e, index) => {\n    const { name, value } = e.target;\n    const values = [...inputFields];\n    values[index][name] = value;\n    setInputFields(values);\n  };\n\n  useEffect(() => {\n    experienceValues(inputFields);\n  }, [inputFields]);\n\n  const addMoreExp = () => {\n    setInputFields([\n      ...inputFields,\n      {\n        employer: \"\",\n        jobTitle: \"\",\n        startJob: \"\",\n        endJob: \"\",\n      },\n    ]);\n  };\n\n  const removeExp = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  return (\n    <div className=\"Experience\">\n      {inputFields.map((inputField, index) => (\n        <div key={index}>\n          <div>\n            <label htmlFor=\"employer\">Employer</label>{\" \"}\n            <input\n              name=\"employer\"\n              value={inputField.employer}\n              onChange={(e) => handleChange(e, index)}\n              type=\"text\"\n              // id=\"inline_field\"\n              className=\"nes-input is-success\"\n              placeholder=\"NES.css\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"jobTitle\">jobTitle</label>\n            <input\n              name=\"jobTitle\"\n              value={inputField.jobTitle}\n              onChange={(e) => handleChange(e, index)}\n              type=\"text\"\n              // id=\"inline_field\"\n              className=\"nes-input is-success\"\n              placeholder=\"NES.css\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"startJob\">From:</label>\n            <input\n              onChange={(e) => handleChange(e, index)}\n              type=\"month\"\n              name=\"startJob\"\n              value={inputField.startJob}\n              // id=\"inline_field\"\n              className=\"nes-input is-success\"\n              placeholder=\"NES.css\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"endJob\">To:</label>\n            <input\n              onChange={(e) => handleChange(e, index)}\n              type=\"month\"\n              name=\"endJob\"\n              value={inputField.endJob}\n              // id=\"inline_field\"\n              className=\"nes-input is-success\"\n              placeholder=\"NES.css\"\n            />\n          </div>\n\n          <label htmlFor=\"jobDuties\">jobDuties</label>\n          <textarea\n            name=\"jobDuties\"\n            onChange={(e) => handleChange(e, index)}\n            value={inputField.jobDuties}\n            id=\"textarea_field\"\n            className=\"nes-textarea\"\n          ></textarea>\n\n          <button\n            onClick={() => removeExp(index)}\n            type=\"button\"\n            className=\"nes-btn is-error\"\n          >\n            Remove\n          </button>\n        </div>\n      ))}\n      <button onClick={addMoreExp} type=\"button\" className=\"nes-btn is-success\">\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default Experience;\n","import { useState, useEffect } from \"react\";\n\nconst Education = ({ educationValues }) => {\n  const [inputFields, setInputFields] = useState([\n    {\n      school: \"\",\n      degree: \"\",\n      startSchool: \"\",\n      endSchool: \"\",\n    },\n  ]);\n  const handleChange = (e, index) => {\n    const { name, value } = e.target;\n    const values = [...inputFields];\n    values[index][name] = value;\n    setInputFields(values);\n  };\n\n  useEffect(() => {\n    educationValues(inputFields);\n  }, [inputFields]);\n\n  const addMoreEdu = () => {\n    setInputFields([\n      ...inputFields,\n      {\n        school: \"\",\n        degree: \"\",\n        startSchool: \"\",\n        endSchool: \"\",\n      },\n    ]);\n  };\n\n  const removeEdu = (index) => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  return (\n    <div className=\"Education\">\n      {inputFields.map((input, index) => (\n        <div key={index}>\n          <div>\n            <label htmlFor=\"school\">school</label>\n            <input\n              value={input.school}\n              name=\"school\"\n              onChange={(e) => handleChange(e, index)}\n              type=\"text\"\n              // id=\"inline_field\"\n              className=\"nes-input is-success\"\n              placeholder=\"NES.css\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"degree\">degree</label>\n            <input\n              value={input.degree}\n              name=\"degree\"\n              onChange={(e) => handleChange(e, index)}\n              type=\"text\"\n              // id=\"inline_field\"\n              className=\"nes-input is-success\"\n              placeholder=\"NES.css\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"startSchool\">From:</label>\n            <input\n              onChange={(e) => handleChange(e, index)}\n              type=\"month\"\n              value={input.startSchool}\n              name=\"startSchool\"\n              // id=\"inline_field\"\n              className=\"nes-input is-success\"\n              placeholder=\"NES.css\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"endSchool\">To:</label>\n            <input\n              onChange={(e) => handleChange(e, index)}\n              type=\"month\"\n              value={input.endSchool}\n              name=\"endSchool\"\n              // id=\"inline_field\"\n              className=\"nes-input is-success\"\n              placeholder=\"NES.css\"\n            />\n          </div>\n\n          <button\n            onClick={() => removeEdu(index)}\n            type=\"button\"\n            className=\"nes-btn is-error\"\n          >\n            Remove\n          </button>\n        </div>\n      ))}\n      <button onClick={addMoreEdu} type=\"button\" className=\"nes-btn is-success\">\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default Education;\n","import { ImMail4 } from \"react-icons/im\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { TiLocationOutline } from \"react-icons/ti\";\nconst uniqid = require(\"uniqid\");\n\nconst CvPage = ({ headerState, expState, eduState }) => {\n  return (\n    <div className=\"CvPage\">\n      <div className=\"cv-header\">\n        <h1 className=\"name\">{headerState.name}</h1>\n\n        <div className=\"website\">\n          <AiFillGithub /> {headerState.website}\n        </div>\n\n        <div className=\"address\">\n          <TiLocationOutline />\n          {headerState.address}\n        </div>\n\n        <div className=\"email\">\n          <ImMail4 />\n          {headerState.email}\n        </div>\n      </div>\n\n      {expState.map((exp) => (\n        <div key={uniqid()} className=\"cv-experience-section\">\n          <h1>Work Experience</h1>\n          <div className=\"employer\"> employer: {exp.employer}</div>\n\n          <div className=\"jobTitle\">jobTitle: {exp.jobTitle}</div>\n\n          <div className=\"startJob\">startJob: {exp.startJob}</div>\n\n          <div className=\"endJob\">endJob: {exp.endJob}</div>\n        </div>\n      ))}\n      {eduState.map((edu) => (\n        <div key={uniqid()} className=\"cv-experience-section\">\n          <h1>Education</h1>\n          <div className=\"employer\"> employer: {edu.school}</div>\n\n          <div className=\"jobTitle\">jobTitle: {edu.degree}</div>\n\n          <div className=\"startJob\">startJob: {edu.startSchool}</div>\n\n          <div className=\"endJob\">endJob: {edu.endSchool}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CvPage;\n","import { useState } from \"react\";\nimport Header from \"./Header\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nimport CvPage from \"./CvPage\";\n\nconst Form = () => {\n  const [headerState, setheaderState] = useState([]);\n  const headerValues = (values) => {\n    setheaderState({ ...values });\n  };\n\n  const [expState, setExpState] = useState([]);\n  const experienceValues = (values) => {\n    setExpState(values);\n  };\n\n  const [eduState, setEduState] = useState([]);\n  const educationValues = (values) => {\n    setEduState(values);\n  };\n\n  return (\n    <div className=\"Form\">\n      <div className=\"nes-container with-title\">\n        <span className=\"title\">Personal details</span>\n        <Header headerValues={headerValues} />\n      </div>\n\n      <div className=\"nes-container with-title\">\n        <span className=\"title\">Work Experience</span>\n        <Experience experienceValues={experienceValues} />\n      </div>\n\n      <div className=\"nes-container with-title\">\n        <span className=\"title\">Education</span>\n        <Education educationValues={educationValues} />\n      </div>\n\n      <div>\n        <CvPage\n          headerState={headerState}\n          expState={expState}\n          eduState={eduState}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","import \"../node_modules/nes.css/css/nes.min.css\";\nimport \"./App.scss\";\nimport Form from \"./Components/Form\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}